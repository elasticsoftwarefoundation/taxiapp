<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0"
         metadata-complete="true">

    <display-name>ElasticActors TaxiApp Server</display-name>
    <!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext
           instead of the default XmlWebApplicationContext -->
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>
            org.elasticsoftware.elasticactors.spring.AnnotationConfigWebApplicationContext
        </param-value>
    </context-param>

    <!-- Configuration locations must consist of one or more comma- or space-delimited
         fully-qualified @Configuration classes. Fully-qualified packages may also be
         specified for component-scanning -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>org.esf.taxiapp.config.AppConfig</param-value>
    </context-param>

    <!-- This will ensure that all the elastic actor modules on the classpath are added to the component scanning  -->

    <context-param>
        <param-name>contextInitializerClasses</param-name>
        <param-value>org.elasticsoftware.elasticactors.spring.ActorSystemApplicationContextInitializer</param-value>
    </context-param>


    <!-- Bootstrap the root application context as usual using ContextLoaderListener -->
    <listener>
        <listener-class>org.elasticsoftware.elasticactors.spring.ElasticActorsContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>taxiapp</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>

    <servlet-mapping>
        <servlet-name>taxiapp</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
